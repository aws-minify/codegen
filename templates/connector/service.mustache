'use strict';

{{#operations}}
{{#operation}}

/**
 {{#summary}}
 * {{{summary}}}
 {{/summary}}
 {{#notes}}
 * {{{notes}}}
 {{/notes}}
 *
{{#allParams}}
 * {{paramName}} {{{dataType}}} {{{description}}}{{^required}} (optional){{/required}}
{{/allParams}}
{{^returnType}}
 * no response value expected for this operation
{{/returnType}}
{{#returnType}}
 * returns {{{returnType}}}
{{/returnType}}
 **/
exports.{{{operationId}}} = function ({{#allParams}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}}) {
  try {
    var {{classname}} = require('../{{providerFolder}}/' + {{primaryParamName}} + '/{{classname}}Provider');
    if ({{classname}} && typeof {{classname}}.{{{operationId}}} === "function") {
      return {{classname}}.{{{operationId}}}({{#allParams}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}});      
    } else {
      return new Promise(function(resolve, reject) {
        reject({
          code: 'ErrorServiceProviderNotAllowedException',
          message: 'The service:' + {{primaryParamName}} + ' is not allow this operation!'
        });
      });
    }
  } catch (error) {
    return new Promise(function(resolve, reject) {
        reject({
          code: 'ErrorServiceProviderNotHandledException',
          message: 'The service:' + {{primaryParamName}} + ' is not handled for this exception! See `error` object for more details.',
          error: error
        });
      });
  }
}

{{/operation}}
{{/operations}}
